/*
 Navicat Premium Data Transfer

 Source Server         : wy
 Source Server Type    : MySQL
 Source Server Version : 80020
 Source Host           : localhost:3306
 Source Schema         : blog

 Target Server Type    : MySQL
 Target Server Version : 80020
 File Encoding         : 65001

 Date: 27/08/2020 09:52:04
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `aid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `view` int(0) NULL DEFAULT NULL,
  `message` int(0) NULL DEFAULT NULL,
  `article_date` date NULL DEFAULT NULL,
  `article_image` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `article_introduce` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `detail` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  PRIMARY KEY (`aid`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', '1Âè∑', 59, 7, '2020-08-25', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '<!doctype html>\r\n<html>\r\n<head>\r\n<meta charset=\'UTF-8\'><meta name=\'viewport\' content=\'width=device-width initial-scale=1\'>\r\n<title></title><link href=\'https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext\' rel=\'stylesheet\' type=\'text/css\' /><style type=\'text/css\'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; }\r\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\r\nbody { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }\r\niframe { margin: auto; }\r\na.url { word-break: break-all; }\r\na:active, a:hover { outline: 0px; }\r\n.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }\r\n#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; }\r\n#write.first-line-indent p { text-indent: 2em; }\r\n#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }\r\n#write.first-line-indent li { margin-left: 2em; }\r\n.for-image #write { padding-left: 8px; padding-right: 8px; }\r\nbody.typora-export { padding-left: 30px; padding-right: 30px; }\r\n.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }\r\n@media screen and (max-width: 500px) {\r\n  body.typora-export { padding-left: 0px; padding-right: 0px; }\r\n  #write { padding-left: 20px; padding-right: 20px; }\r\n  .CodeMirror-sizer { margin-left: 0px !important; }\r\n  .CodeMirror-gutters { display: none !important; }\r\n}\r\n#write li > figure:last-child { margin-bottom: 0.5rem; }\r\n#write ol, #write ul { position: relative; }\r\nimg { max-width: 100%; vertical-align: middle; }\r\nbutton, input, select, textarea { color: inherit; font: inherit; }\r\ninput[type=\"checkbox\"], input[type=\"radio\"] { line-height: normal; padding: 0px; }\r\n*, ::after, ::before { box-sizing: border-box; }\r\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }\r\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }\r\np { line-height: inherit; }\r\nh1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }\r\np { orphans: 4; }\r\nh1 { font-size: 2rem; }\r\nh2 { font-size: 1.8rem; }\r\nh3 { font-size: 1.6rem; }\r\nh4 { font-size: 1.4rem; }\r\nh5 { font-size: 1.2rem; }\r\nh6 { font-size: 1rem; }\r\n.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }\r\n.hidden { display: none; }\r\n.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }\r\na { cursor: pointer; }\r\nsup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }\r\nsup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }\r\n#write input[type=\"checkbox\"] { cursor: pointer; width: inherit; height: inherit; }\r\nfigure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }\r\nfigure > table { margin: 0px !important; }\r\ntr { break-inside: avoid; break-after: auto; }\r\nthead { display: table-header-group; }\r\ntable { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }\r\ntable.md-table td { min-width: 32px; }\r\n.CodeMirror-gutters { border-right: 0px; background-color: inherit; }\r\n.CodeMirror-linenumber { user-select: none; }\r\n.CodeMirror { text-align: left; }\r\n.CodeMirror-placeholder { opacity: 0.3; }\r\n.CodeMirror pre { padding: 0px 4px; }\r\n.CodeMirror-lines { padding: 0px; }\r\ndiv.hr:focus { cursor: none; }\r\n#write pre { white-space: pre-wrap; }\r\n#write.fences-no-line-wrapping pre { white-space: pre; }\r\n#write pre.ty-contain-cm { white-space: normal; }\r\n.CodeMirror-gutters { margin-right: 4px; }\r\n.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }\r\n.md-diagram-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }\r\n#write .md-fences.mock-cm { white-space: pre-wrap; }\r\n.md-fences.md-fences-with-lineno { padding-left: 0px; }\r\n#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }\r\n.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }\r\n.CodeMirror-line, twitterwidget { break-inside: avoid; }\r\n.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }\r\n.footnotes + .footnotes { margin-top: 0px; }\r\n.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }\r\nli div { padding-top: 0px; }\r\nblockquote { margin: 1rem 0px; }\r\nli .mathjax-block, li p { margin: 0.5rem 0px; }\r\nli { margin: 0px; position: relative; }\r\nblockquote > :last-child { margin-bottom: 0px; }\r\nblockquote > :first-child, li > :first-child { margin-top: 0px; }\r\n.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }\r\n#write .footnote-line { white-space: pre-wrap; }\r\n@media print {\r\n  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }\r\n  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }\r\n  .typora-export * { -webkit-print-color-adjust: exact; }\r\n  html.blink-to-pdf { font-size: 13px; }\r\n  .typora-export #write { padding-left: 32px; padding-right: 32px; padding-bottom: 0px; break-after: avoid; }\r\n  .typora-export #write::after { height: 0px; }\r\n}\r\n.footnote-line { margin-top: 0.714em; font-size: 0.7em; }\r\na img, img a { cursor: pointer; }\r\npre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }\r\np > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }\r\n#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }\r\np > .md-image:only-child { display: inline-block; width: 100%; }\r\n#write .MathJax_Display { margin: 0.8em 0px 0px; }\r\n.md-math-block { width: 100%; }\r\n.md-math-block:not(:empty)::after { display: none; }\r\n[contenteditable=\"true\"]:active, [contenteditable=\"true\"]:focus, [contenteditable=\"false\"]:active, [contenteditable=\"false\"]:focus { outline: 0px; box-shadow: none; }\r\n.md-task-list-item { position: relative; list-style-type: none; }\r\n.task-list-item.md-task-list-item { padding-left: 0px; }\r\n.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }\r\n.math { font-size: 1rem; }\r\n.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }\r\n.md-toc-content { position: relative; margin-left: 0px; }\r\n.md-toc-content::after, .md-toc::after { display: none; }\r\n.md-toc-item { display: block; color: rgb(65, 131, 196); }\r\n.md-toc-item a { text-decoration: none; }\r\n.md-toc-inner:hover { text-decoration: underline; }\r\n.md-toc-inner { display: inline-block; cursor: pointer; }\r\n.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }\r\n.md-toc-h2 .md-toc-inner { margin-left: 2em; }\r\n.md-toc-h3 .md-toc-inner { margin-left: 4em; }\r\n.md-toc-h4 .md-toc-inner { margin-left: 6em; }\r\n.md-toc-h5 .md-toc-inner { margin-left: 8em; }\r\n.md-toc-h6 .md-toc-inner { margin-left: 10em; }\r\n@media screen and (max-width: 48em) {\r\n  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }\r\n  .md-toc-h4 .md-toc-inner { margin-left: 5em; }\r\n  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }\r\n  .md-toc-h6 .md-toc-inner { margin-left: 8em; }\r\n}\r\na.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }\r\n.footnote-line a:not(.reversefootnote) { color: inherit; }\r\n.md-attr { display: none; }\r\n.md-fn-count::after { content: \".\"; }\r\ncode, pre, samp, tt { font-family: var(--monospace); }\r\nkbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }\r\n.md-comment { color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); }\r\ncode { text-align: left; vertical-align: initial; }\r\na.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }\r\n.md-inline-math .MathJax_SVG .noError { display: none !important; }\r\n.html-for-mac .inline-math-svg .MathJax_SVG { vertical-align: 0.2px; }\r\n.md-math-block .MathJax_SVG_Display { text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; }\r\n.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display { width: auto; margin: inherit; display: inline-block !important; }\r\n.MathJax_SVG .MJX-monospace { font-family: var(--monospace); }\r\n.MathJax_SVG .MJX-sans-serif { font-family: sans-serif; }\r\n.MathJax_SVG { display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; }\r\n.MathJax_SVG * { transition: none 0s ease 0s; }\r\n.MathJax_SVG_Display svg { vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; }\r\n.os-windows.monocolor-emoji .md-emoji { font-family: \"Segoe UI Symbol\", sans-serif; }\r\n.md-diagram-panel > svg { max-width: 100%; }\r\n[lang=\"flow\"] svg, [lang=\"mermaid\"] svg { max-width: 100%; height: auto; }\r\n[lang=\"mermaid\"] .node text { font-size: 1rem; }\r\ntable tr th { border-bottom: 0px; }\r\nvideo { max-width: 100%; display: block; margin: 0px auto; }\r\niframe { max-width: 100%; width: 100%; border: none; }\r\n.highlight td, .highlight tr { border: 0px; }\r\nsvg[id^=\"mermaidChart\"] { line-height: 1em; }\r\nmark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }\r\n.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }\r\nmark .md-meta { color: rgb(0, 0, 0); opacity: 0.3 !important; }\r\n\r\n\r\n.CodeMirror { height: auto; }\r\n.CodeMirror.cm-s-inner { background: inherit; }\r\n.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }\r\n.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }\r\n.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }\r\n.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }\r\n.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }\r\n.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }\r\n.cm-s-inner .cm-number { color: rgb(17, 102, 68); }\r\n.cm-s-inner .cm-def { color: rgb(0, 0, 255); }\r\n.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }\r\n.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }\r\n.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }\r\n.cm-s-inner .cm-string { color: rgb(170, 17, 17); }\r\n.cm-s-inner .cm-property { color: rgb(0, 0, 0); }\r\n.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }\r\n.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }\r\n.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }\r\n.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }\r\n.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }\r\n.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }\r\n.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }\r\n.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }\r\n.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }\r\n.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }\r\n.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }\r\n.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }\r\n.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }\r\n.cm-negative { color: rgb(221, 68, 68); }\r\n.cm-positive { color: rgb(34, 153, 34); }\r\n.cm-header, .cm-strong { font-weight: 700; }\r\n.cm-del { text-decoration: line-through; }\r\n.cm-em { font-style: italic; }\r\n.cm-link { text-decoration: underline; }\r\n.cm-error { color: red; }\r\n.cm-invalidchar { color: red; }\r\n.cm-constant { color: rgb(38, 139, 210); }\r\n.cm-defined { color: rgb(181, 137, 0); }\r\ndiv.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }\r\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }\r\n.cm-s-inner .CodeMirror-activeline-background { background: inherit; }\r\n.CodeMirror { position: relative; overflow: hidden; }\r\n.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }\r\n.CodeMirror-sizer { position: relative; }\r\n.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; }\r\n.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }\r\n.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: hidden; }\r\n.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }\r\n.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }\r\n.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 30px; z-index: 3; }\r\n.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }\r\n.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }\r\n.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }\r\n.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }\r\n.CodeMirror-lines { cursor: text; }\r\n.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }\r\n.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }\r\n.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }\r\n.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }\r\n.CodeMirror-linebackground { position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 0; }\r\n.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }\r\n.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }\r\n.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }\r\n.CodeMirror-measure pre { position: static; }\r\n.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }\r\n.CodeMirror div.CodeMirror-cursor { visibility: hidden; }\r\n.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }\r\n.cm-searching { background: rgba(255, 255, 0, 0.4); }\r\n@media print {\r\n  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }\r\n}\r\n\r\n\r\n:root {\r\n    --side-bar-bg-color: #fafafa;\r\n    --control-text-color: #777;\r\n}\r\n\r\n@include-when-export url(https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext);\r\n\r\nhtml {\r\n    font-size: 16px;\r\n}\r\n\r\nbody {\r\n    font-family: \"Open Sans\",\"Clear Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\r\n    color: rgb(51, 51, 51);\r\n    line-height: 1.6;\r\n}\r\n\r\n#write {\r\n    max-width: 860px;\r\n  	margin: 0 auto;\r\n  	padding: 30px;\r\n    padding-bottom: 100px;\r\n}\r\n\r\n@media only screen and (min-width: 1400px) {\r\n	#write {\r\n		max-width: 1024px;\r\n	}\r\n}\r\n\r\n@media only screen and (min-width: 1800px) {\r\n	#write {\r\n		max-width: 1200px;\r\n	}\r\n}\r\n\r\n#write > ul:first-child,\r\n#write > ol:first-child{\r\n    margin-top: 30px;\r\n}\r\n\r\na {\r\n    color: #4183C4;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    position: relative;\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    font-weight: bold;\r\n    line-height: 1.4;\r\n    cursor: text;\r\n}\r\nh1:hover a.anchor,\r\nh2:hover a.anchor,\r\nh3:hover a.anchor,\r\nh4:hover a.anchor,\r\nh5:hover a.anchor,\r\nh6:hover a.anchor {\r\n    text-decoration: none;\r\n}\r\nh1 tt,\r\nh1 code {\r\n    font-size: inherit;\r\n}\r\nh2 tt,\r\nh2 code {\r\n    font-size: inherit;\r\n}\r\nh3 tt,\r\nh3 code {\r\n    font-size: inherit;\r\n}\r\nh4 tt,\r\nh4 code {\r\n    font-size: inherit;\r\n}\r\nh5 tt,\r\nh5 code {\r\n    font-size: inherit;\r\n}\r\nh6 tt,\r\nh6 code {\r\n    font-size: inherit;\r\n}\r\nh1 {\r\n    padding-bottom: .3em;\r\n    font-size: 2.25em;\r\n    line-height: 1.2;\r\n    border-bottom: 1px solid #eee;\r\n}\r\nh2 {\r\n   padding-bottom: .3em;\r\n    font-size: 1.75em;\r\n    line-height: 1.225;\r\n    border-bottom: 1px solid #eee;\r\n}\r\nh3 {\r\n    font-size: 1.5em;\r\n    line-height: 1.43;\r\n}\r\nh4 {\r\n    font-size: 1.25em;\r\n}\r\nh5 {\r\n    font-size: 1em;\r\n}\r\nh6 {\r\n   font-size: 1em;\r\n    color: #777;\r\n}\r\np,\r\nblockquote,\r\nul,\r\nol,\r\ndl,\r\ntable{\r\n    margin: 0.8em 0;\r\n}\r\nli>ol,\r\nli>ul {\r\n    margin: 0 0;\r\n}\r\nhr {\r\n    height: 2px;\r\n    padding: 0;\r\n    margin: 16px 0;\r\n    background-color: #e7e7e7;\r\n    border: 0 none;\r\n    overflow: hidden;\r\n    box-sizing: content-box;\r\n}\r\n\r\nli p.first {\r\n    display: inline-block;\r\n}\r\nul,\r\nol {\r\n    padding-left: 30px;\r\n}\r\nul:first-child,\r\nol:first-child {\r\n    margin-top: 0;\r\n}\r\nul:last-child,\r\nol:last-child {\r\n    margin-bottom: 0;\r\n}\r\nblockquote {\r\n    border-left: 4px solid #dfe2e5;\r\n    padding: 0 15px;\r\n    color: #777777;\r\n}\r\nblockquote blockquote {\r\n    padding-right: 0;\r\n}\r\ntable {\r\n    padding: 0;\r\n    word-break: initial;\r\n}\r\ntable tr {\r\n    border-top: 1px solid #dfe2e5;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\ntable tr:nth-child(2n),\r\nthead {\r\n    background-color: #f8f8f8;\r\n}\r\ntable tr th {\r\n    font-weight: bold;\r\n    border: 1px solid #dfe2e5;\r\n    border-bottom: 0;\r\n    margin: 0;\r\n    padding: 6px 13px;\r\n}\r\ntable tr td {\r\n    border: 1px solid #dfe2e5;\r\n    margin: 0;\r\n    padding: 6px 13px;\r\n}\r\ntable tr th:first-child,\r\ntable tr td:first-child {\r\n    margin-top: 0;\r\n}\r\ntable tr th:last-child,\r\ntable tr td:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.CodeMirror-lines {\r\n    padding-left: 4px;\r\n}\r\n\r\n.code-tooltip {\r\n    box-shadow: 0 1px 1px 0 rgba(0,28,36,.3);\r\n    border-top: 1px solid #eef2f2;\r\n}\r\n\r\n.md-fences,\r\ncode,\r\ntt {\r\n    border: 1px solid #e7eaed;\r\n    background-color: #f8f8f8;\r\n    border-radius: 3px;\r\n    padding: 0;\r\n    padding: 2px 4px 0px 4px;\r\n    font-size: 0.9em;\r\n}\r\n\r\ncode {\r\n    background-color: #f3f4f4;\r\n    padding: 0 2px 0 2px;\r\n}\r\n\r\n.md-fences {\r\n    margin-bottom: 15px;\r\n    margin-top: 15px;\r\n    padding-top: 8px;\r\n    padding-bottom: 6px;\r\n}\r\n\r\n\r\n.md-task-list-item > input {\r\n  margin-left: -1.3em;\r\n}\r\n\r\n@media print {\r\n    html {\r\n        font-size: 13px;\r\n    }\r\n    table,\r\n    pre {\r\n        page-break-inside: avoid;\r\n    }\r\n    pre {\r\n        word-wrap: break-word;\r\n    }\r\n}\r\n\r\n.md-fences {\r\n	background-color: #f8f8f8;\r\n}\r\n#write pre.md-meta-block {\r\n	padding: 1rem;\r\n    font-size: 85%;\r\n    line-height: 1.45;\r\n    background-color: #f7f7f7;\r\n    border: 0;\r\n    border-radius: 3px;\r\n    color: #777777;\r\n    margin-top: 0 !important;\r\n}\r\n\r\n.mathjax-block>.code-tooltip {\r\n	bottom: .375rem;\r\n}\r\n\r\n.md-mathjax-midline {\r\n    background: #fafafa;\r\n}\r\n\r\n#write>h3.md-focus:before{\r\n	left: -1.5625rem;\r\n	top: .375rem;\r\n}\r\n#write>h4.md-focus:before{\r\n	left: -1.5625rem;\r\n	top: .285714286rem;\r\n}\r\n#write>h5.md-focus:before{\r\n	left: -1.5625rem;\r\n	top: .285714286rem;\r\n}\r\n#write>h6.md-focus:before{\r\n	left: -1.5625rem;\r\n	top: .285714286rem;\r\n}\r\n.md-image>.md-meta {\r\n    /*border: 1px solid #ddd;*/\r\n    border-radius: 3px;\r\n    padding: 2px 0px 0px 4px;\r\n    font-size: 0.9em;\r\n    color: inherit;\r\n}\r\n\r\n.md-tag {\r\n    color: #a7a7a7;\r\n    opacity: 1;\r\n}\r\n\r\n.md-toc { \r\n    margin-top:20px;\r\n    padding-bottom:20px;\r\n}\r\n\r\n.sidebar-tabs {\r\n    border-bottom: none;\r\n}\r\n\r\n#typora-quick-open {\r\n    border: 1px solid #ddd;\r\n    background-color: #f8f8f8;\r\n}\r\n\r\n#typora-quick-open-item {\r\n    background-color: #FAFAFA;\r\n    border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n}\r\n\r\n/** focus mode */\r\n.on-focus-mode blockquote {\r\n    border-left-color: rgba(85, 85, 85, 0.12);\r\n}\r\n\r\nheader, .context-menu, .megamenu-content, footer{\r\n    font-family: \"Segoe UI\", \"Arial\", sans-serif;\r\n}\r\n\r\n.file-node-content:hover .file-node-icon,\r\n.file-node-content:hover .file-node-open-state{\r\n    visibility: visible;\r\n}\r\n\r\n.mac-seamless-mode #typora-sidebar {\r\n    background-color: #fafafa;\r\n    background-color: var(--side-bar-bg-color);\r\n}\r\n\r\n.md-lang {\r\n    color: #b4654d;\r\n}\r\n\r\n.html-for-mac .context-menu {\r\n    --item-hover-bg-color: #E6F0FE;\r\n}\r\n\r\n#md-notification .btn {\r\n    border: 0;\r\n}\r\n\r\n.dropdown-menu .divider {\r\n    border-color: #e5e5e5;\r\n}\r\n\r\n.ty-preferences .window-content {\r\n    background-color: #fafafa;\r\n}\r\n\r\n.ty-preferences .nav-group-item.active {\r\n    color: white;\r\n    background: #999;\r\n}\r\n\r\n\r\n</style>\r\n</head>\r\n<body class=\'typora-export os-windows\' >\r\n<div  id=\'write\'  class = \'is-node\'><h2><a name=\"java8Êñ∞ÁâπÊÄß\" class=\"md-header-anchor\"></a><span>JAVA8Êñ∞ÁâπÊÄß</span></h2><p><a href=\'https://www.bilibili.com/video/BV1xb411w7jM\'><span>Â∞öÁ°ÖË∞∑_Java8Êñ∞ÁâπÊÄß</span></a></p><h3><a name=\"lambda\" class=\"md-header-anchor\"></a><span>lambda</span></h3><p><span>ÂáΩÊï∞ÂºèÊé•Âè£Ê≥®ÈáäÔºö</span><code>@FunctionalInterface</code></p><p><span>ÁÆÄÂåñÁ≠ñÁï•Ê®°ÂºèÔºöÂÆûÁé∞Êé•Âè£ --&gt; ÂåøÂêçÁ±ª --&gt; Âü∫Á°Älambda --&gt; ÂºïÁî®</span></p><p><span>Âü∫Á°ÄËØ≠Ê≥ï</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">x</span> <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">xxx</span>;</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">(<span class=\"cm-variable\">x</span>,<span class=\"cm-variable\">y</span>) <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">xxx</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">(<span class=\"cm-variable\">x</span>)<span class=\"cm-operator\">-&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* other work</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 179px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 179px;\"></div></div></div></pre><p><span>java8 ÂÜÖÁΩÆÁöÑÂõõÂ§ßÊ†∏ÂøÉÂáΩÊï∞ÂºèÊé•Âè£</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">Consumer</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// Ê∂àË¥πÂûãÊé•Âè£</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">void</span> <span class=\"cm-variable\">accept</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">Supplier</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//‰æõÁªôÂûãÊé•Âè£</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">get</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">Function</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span>,<span class=\"cm-variable\">R</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"	\">    </span><span class=\"cm-comment\">//ÂáΩÊï∞ÂûãÊé•Âè£</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">R</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">Predicate</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//Êñ≠Ë®ÄÂûãÊé•Âè£</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">boolean</span> <span class=\"cm-variable\">test</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 358px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 358px;\"></div></div></div></pre><p><span>ÂÖ∂ÂÆÉÊé•Âè£</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">BiFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span>,<span class=\"cm-variable\">U</span>,<span class=\"cm-variable\">R</span><span class=\"cm-operator\">&gt;</span>{</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">R</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>,<span class=\"cm-variable\">U</span> <span class=\"cm-variable\">u</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">UnaryOperator</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-keyword\">extends</span> <span class=\"cm-variable\">Function</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span>, <span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span>{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">BinaryOperator</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-keyword\">extends</span> <span class=\"cm-variable\">BiFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span>,<span class=\"cm-variable\">T</span>,<span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span>{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t1</span>, <span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t2</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">BiConsumer</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span>, <span class=\"cm-variable\">U</span><span class=\"cm-operator\">&gt;</span>{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">void</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">t</span>, <span class=\"cm-variable\">U</span> <span class=\"cm-variable\">t</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">ToIntFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">applyAsInt</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">ToLongFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">long</span> <span class=\"cm-variable\">applyAsLong</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">ToDoubleFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">T</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">double</span> <span class=\"cm-variable\">applyAsDouble</span>(<span class=\"cm-variable\">T</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">IntFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">R</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">R</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">LongFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">R</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">R</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable-3\">long</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">interface</span> <span class=\"cm-def\">DoubleFunction</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">R</span><span class=\"cm-operator\">&gt;</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">R</span> <span class=\"cm-variable\">apply</span>(<span class=\"cm-variable-3\">double</span> <span class=\"cm-variable\">value</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 672px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 672px;\"></div></div></div></pre><p><span>ÊñπÊ≥ïÂºïÁî®</span></p><ul><li><span>ÂØπË±°::ÂÆû‰æãÊñπÊ≥ïÂêç</span></li><li><span>Á±ª::ÈùôÊÄÅÊñπÊ≥ïÂêç</span></li><li><span>Á±ª::ÂÆû‰æãÊñπÊ≥ïÂêç</span></li></ul><p><span>ÊûÑÈÄ†Âô®ÂºïÁî®ÔºöÁ±ª::new</span></p><p><span>Êï∞ÁªÑÂºïÁî®Ôºötype[]::new</span></p><h3><a name=\"stream\" class=\"md-header-anchor\"></a><span>Stream</span></h3><ol><li><p><span>ÂàõÂª∫ÊµÅ</span></p><ul><li><p><span>ÈÄöËøá</span><code>Collection</code><span>Á≥ªÂàóÈõÜÂêàÊèê‰æõÁöÑ</span><code>stream()</code><span>Êàñ</span><code>paralleStream()</code></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">list</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">ArrayList</span><span class=\"cm-operator\">&lt;&gt;</span>();</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Stream</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">stream</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">list</span>.<span class=\"cm-variable\">stream</span>();</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 45px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 45px;\"></div></div></div></pre></li><li><p><span>ÈÄöËøá</span><code>Arrays</code><span>‰∏≠ÁöÑÈùôÊÄÅÊñπÊ≥ï</span><code>stream()</code><span>ÊñπÊ≥ïËé∑ÂèñÊï∞ÁªÑÊµÅ</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">String</span>[] <span class=\"cm-variable\">strings</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable-3\">String</span>[<span class=\"cm-number\">10</span>];</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Stream</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">stream</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Arrays</span>.<span class=\"cm-variable\">stream</span>(<span class=\"cm-variable\">strings</span>);</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 45px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 45px;\"></div></div></div></pre></li><li><p><span>ÈÄöËøá</span><code>Stream</code><span>‰∏≠ÁöÑÈùôÊÄÅÊñπÊ≥ï</span><code>of()</code></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Stream</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">String</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">stream</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Stream</span>.<span class=\"cm-variable\">of</span>(<span class=\"cm-string\">\"aa\"</span>, <span class=\"cm-string\">\"bb\"</span>, <span class=\"cm-string\">\"cc\"</span>);</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 22px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 22px;\"></div></div></div></pre></li><li><p><span>ÂàõÂª∫Êó†ÈôêÊµÅ</span></p><ol><li><p><span>Ëø≠‰ª£</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Stream</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">Integer</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">stream</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Stream</span>.<span class=\"cm-variable\">iterate</span>(<span class=\"cm-number\">0</span>,(<span class=\"cm-variable\">x</span>)<span class=\"cm-operator\">-&gt;</span><span class=\"cm-variable\">x</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">2</span>);</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// ÂèÇÊï∞‰ªé0ÂºÄÂßãÔºåÁîüÊàêÊó†Êï∞‰∏™ÂèÇÊï∞Âä†2ÁöÑÊï∞</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">stream</span>.<span class=\"cm-variable\">forEach</span>(<span class=\"cm-variable\">System</span>.<span class=\"cm-variable\">out</span>::<span class=\"cm-variable\">println</span>);</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 67px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 67px;\"></div></div></div></pre></li><li><p><span>ÁîüÊàê</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block ty-contain-cm modeLoaded\" lang=\"java\"><div class=\"CodeMirror cm-s-inner CodeMirror-wrap\" lang=\"java\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 0px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">Stream</span>.<span class=\"cm-variable\">generate</span>(() <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">Math</span>.<span class=\"cm-variable\">random</span>())</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;  .<span class=\"cm-variable\">forEach</span>(<span class=\"cm-variable\">System</span>.<span class=\"cm-variable\">out</span>::<span class=\"cm-variable\">println</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// ÈöèÊú∫ËæìÂá∫Êó†Êï∞‰∏™ÈöèÊú∫Êï∞</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 67px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 67px;\"></div></div></div></pre></li></ol></li></ul></li><li><p><span>‰∏≠Èó¥Êìç‰Ωú</span></p><ul><li><p><span>Á≠õÈÄâ‰∏éÂàáÁâá</span></p><ul><li><span>filterÔºöÊé•Êî∂LambdaÔºå‰ªéÊµÅ‰∏≠ÊéíÈô§Êüê‰∫õÂÖÉÁ¥†„ÄÇ</span></li><li><span>limitÔºöÊà™Êñ≠ÊµÅÔºå‰ΩøÂÖ∂ÂÖÉÁ¥†‰∏çË∂ÖËøáÁªôÂÆöÊï∞Èáè„ÄÇ</span></li><li><span>skip(n)ÔºöË∑≥ËøáÂÖÉÁ¥†ÔºåËøîÂõû‰∏Ä‰∏™ÊâîÊéâ‰∫ÜÂâçn‰∏™ÂÖÉÁ¥†ÁöÑÊµÅ„ÄÇËã•ÊµÅ‰∏≠ÂÖÉÁ¥†‰∏çË∂≥n‰∏™ÔºåÂàôËøîÂõû‰∏Ä‰∏™Á©∫ÊµÅ„ÄÇ‰∏élimit(n)‰∫íË°•</span></li><li><span>distinctÔºöÁ≠õÈÄâÔºåÈÄöËøáÊµÅÊâÄÁîüÊàêÂÖÉÁ¥†ÁöÑhashCode()Âíåequals()ÂéªÈô§ÈáçÂ§çÂÖÉÁ¥†</span></li></ul></li><li><p><span>Êò†Â∞Ñ</span></p><ul><li><span>mapÔºöÊé•Êî∂LambdaÔºåÂ∞ÜÂÖÉÁ¥†ËΩ¨Êç¢ÊàêÂÖ∂‰ªñÂΩ¢ÂºèÊàñËÄÖÊèêÂèñ‰ø°ÊÅØ„ÄÇÊé•Êî∂‰∏Ä‰∏™ÂáΩÊï∞‰Ωú‰∏∫ÂèÇÊï∞ÔºåËØ•ÂáΩÊï∞‰ºöË¢´Â∫îÁî®Âà∞ÊØè‰∏™ÂÖÉÁ¥†‰∏äÔºåÂπ∂Â∞ÜÂÖ∂Êò†Â∞ÑÊàê‰∏Ä‰∏™Êñ∞ÁöÑÂÖÉÁ¥†„ÄÇ</span></li><li><span>flatMapÔºöÊé•Êî∂‰∏Ä‰∏™ÂáΩÊï∞‰Ωú‰∏öÂèÇÊï∞ÔºåÂ∞ÜÊµÅ‰∏≠ÁöÑÊØè‰∏™ÂÄºÈÉΩÊç¢ÊàêÂè¶‰∏Ä‰∏™ÊµÅÔºåÁÑ∂ÂêéÊääÊâÄÊúâÊµÅËøûÊé•Êàê‰∏Ä‰∏™ÊµÅ„ÄÇ</span></li></ul></li><li><p><span>ÊéíÂ∫è </span></p><ul><li><span>sorted()ÔºöËá™ÁÑ∂ÊéíÂ∫è </span></li><li><span>sorted(Comparator com)ÔºöÂÆöÂà∂ÊéíÂ∫è</span></li></ul></li></ul></li><li><p><span>ÁªàÊ≠¢Êìç‰Ωú</span></p><ul><li><span>allMatchÔºöÊ£ÄÊü•ÊòØÂê¶ÂåπÈÖçÊâÄÊúâÂÖÉÁ¥†</span></li><li><span>anyMatchÔºöÊ£ÄÊü•ÊòØÂê¶Ëá≥Â∞ëÂåπÈÖç‰∏Ä‰∏™ÂÖÉÁ¥†</span></li><li><span>noneMatchÔºöÊ£ÄÊü•ÊòØÂê¶Ê≤°ÊúâÂåπÈÖçÊâÄÊúâÂÖÉÁ¥†</span></li><li><span>findFirstÔºöËøîÂõûÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†</span></li><li><span>findAnyÔºöËøîÂõûÂΩìÂâçÊµÅ‰∏≠ÁöÑ‰ªªÊÑèÂÖÉÁ¥†</span></li><li><span>countÔºöËøîÂõûÊµÅ‰∏≠ÂÖÉÁ¥†ÁöÑÊÄª‰∏™Êï∞</span></li><li><span>maxÔºöËøîÂõûÊµÅ‰∏≠ÊúÄÂ§ßÂÄº</span></li><li><span>minÔºöËøîÂõûÊµÅ‰∏≠ÊúÄÂ∞èÂÄº</span></li><li><span>ÂΩíÁ∫¶reduce(T identity, BinaryOperator) / reduce(BinaryOperator)ÔºöÂèØ‰ª•ÊµÅ‰∏≠ÂÖÉÁ¥†ÂèçÂ§çÁªìÂêàËµ∑Êù•ÔºåÂæóÂà∞‰∏Ä‰∏™ÂÄº„ÄÇ</span></li><li><span>Êî∂ÈõÜcollectÔºöÂ∞ÜÊµÅËΩ¨Êç¢‰∏∫ÂÖ∂‰ªñÂΩ¢Âºè„ÄÇÊé•Êî∂‰∏Ä‰∏™CollectorÊé•Âè£ÁöÑÂÆûÁé∞ÔºåÁî®‰∫éÁªôStream‰∏≠ÂÖÉÁ¥†ÂÅöÊ±áÊÄªÁöÑÊñπÊ≥ï„ÄÇ</span></li></ul></li><li><p><span>Âπ∂Ë°åÊµÅÔºöparallel()ÔºöÂü∫‰∫éfork_join„ÄÇ</span></p></li></ol><h3><a name=\"optionalÂÆπÂô®Á±ªÁöÑÂ∏∏Áî®ÊñπÊ≥ï\" class=\"md-header-anchor\"></a><span>OptionalÂÆπÂô®Á±ªÁöÑÂ∏∏Áî®ÊñπÊ≥ï</span></h3><ul><li><span>Optional.of(T t)ÔºöÂàõÂª∫‰∏Ä‰∏™OptionalÂÆû‰æã</span></li><li><span>Optional.empty()ÔºöÂàõÂª∫‰∏Ä‰∏™Á©∫ÁöÑOptionalÂÆû‰æã</span></li><li><span>Optional.ofNullable(T t)ÔºöËã•t‰∏ç‰∏∫nullÔºåÂàõÂª∫OptionalÂÆû‰æãÔºåÂê¶ÂàôÂàõÂª∫Á©∫ÂÆû‰æã</span></li><li><span>isPresent()ÔºöÂà§Êñ≠ÊòØÂê¶ÂåÖÂê´ÂÄº</span></li><li><span>orElse(T t)ÔºöÂ¶ÇÊûúË∞ÉÁî®ÂØπË±°ÂåÖÂê´ÂÄºÔºåËøîÂõûËØ•ÂÄºÔºåÂê¶ÂàôËøîÂõût</span></li><li><span>orElseGet(Supplier s)ÔºöÂ¶ÇÊûúË∞ÉÁî®ÂØπË±°ÂåÖÂê´ÂÄºÔºåËøîÂõûËØ•ÂÄºÔºåÂê¶ÂàôËøîÂõûsËé∑ÂèñÁöÑÂÄº</span></li><li><span>map(Function f)ÔºöÂ¶ÇÊûúÊúâÂÄºÂØπÂÖ∂Â§ÑÁêÜÔºåÂπ∂ËøîÂõûÂ§ÑÁêÜÂêéÁöÑOptionalÔºåÂê¶ÂàôËøîÂõûOptional.empty()</span></li><li><span>flatMap(Function mapper)Ôºö‰∏émapÁ±ª‰ººÔºåË¶ÅÊ±ÇËøîÂõûÂÄºÂøÖÈ°ªÊòØOptional</span></li></ul><h3><a name=\"java8Êó∂Èó¥Á±ª\" class=\"md-header-anchor\"></a><span>Java8Êó∂Èó¥Á±ª</span></h3><ol><li><span>LocalDate/LocalTime/LocalDateTime</span></li><li><span>InstantÔºöÊó∂Èó¥Êà≥</span></li><li><span>DurationÔºöËÆ°ÁÆó‰∏§‰∏™</span><strong><span>Êó∂Èó¥</span></strong><span>‰πãÈó¥ÁöÑÈó¥Èöî</span></li><li><span>PeriodÔºöËÆ°ÁÆó‰∏§‰∏™</span><strong><span>Êó•Êúü</span></strong><span>‰πãÈó¥ÁöÑÈó¥Èöî</span></li><li><span>TemporalAdjusterÔºöÊó∂Èó¥Ê†°Ê≠£Âô®</span></li><li><span>DateTimeFormatterÔºöÊ†ºÂºèÂåñÊó∂Èó¥/Êó•Êúü</span></li><li><span>ZonedDate/ZonedTime/ZonedDateTimeÔºöÂ§ÑÁêÜÊó∂Âå∫</span></li></ol></div>\r\n</body>\r\n</html>');
INSERT INTO `article` VALUES ('10', '10Âè∑', 0, 0, '2020-08-16', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('11', '11Âè∑', 0, 0, '2020-08-15', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('12', '12Âè∑', 0, 0, '2020-08-14', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('2', '2Âè∑', 0, 0, '2020-08-24', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('3', '3Âè∑', 0, 0, '2020-08-23', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('4', '4Âè∑', 0, 0, '2020-08-22', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('5', '5Âè∑', 0, 0, '2020-08-21', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('6', '6Âè∑', 0, 0, '2020-08-20', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('7', '7Âè∑', 0, 0, '2020-08-19', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('8', '8Âè∑', 0, 0, '2020-08-18', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');
INSERT INTO `article` VALUES ('9', '9Âè∑', 0, 0, '2020-08-17', 'http://localhost:8080/blogdata/article_image/300.png', 'java8', '1');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `cid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `aid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `uid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  PRIMARY KEY (`cid`) USING BTREE,
  INDEX `ca_fk`(`aid`) USING BTREE,
  INDEX `cu_fk`(`uid`) USING BTREE,
  CONSTRAINT `ca_fk` FOREIGN KEY (`aid`) REFERENCES `article` (`aid`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `cu_fk` FOREIGN KEY (`uid`) REFERENCES `user` (`uid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('1', '1', '1597958624903', '1Âè∑‰∫∫ÂëòÂèëËµ∑');
INSERT INTO `comment` VALUES ('1598392453723', '1', '1597958624903', 'jkjls');
INSERT INTO `comment` VALUES ('1598393684598', '1', '1597958624903', 'klkjsljdo');
INSERT INTO `comment` VALUES ('1598461887524', '1', '1598460348720', '‰Ω†Â•Ω');
INSERT INTO `comment` VALUES ('1598462369279', '1', '1598460348720', 'kwkw');
INSERT INTO `comment` VALUES ('2', '1', '123456', '2Âè∑‰∫∫ÂëòÂèëËµ∑');

-- ----------------------------
-- Table structure for son_comment
-- ----------------------------
DROP TABLE IF EXISTS `son_comment`;
CREATE TABLE `son_comment`  (
  `sid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `cid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `former` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `f_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `latter` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `l_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `son_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  PRIMARY KEY (`sid`) USING BTREE,
  INDEX `sc`(`cid`) USING BTREE,
  CONSTRAINT `sc` FOREIGN KEY (`cid`) REFERENCES `comment` (`cid`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of son_comment
-- ----------------------------
INSERT INTO `son_comment` VALUES ('1', '1', '123456', '2Âè∑', '1597958624903', '‰Ω†Â•Ω', '2Âè∑ÂõûÂ§ç1Âè∑');
INSERT INTO `son_comment` VALUES ('1598393149756', '1598392453723', '1597958624903', '‰Ω†Â•Ω', '1597958624903', '‰Ω†Â•Ω', '111');
INSERT INTO `son_comment` VALUES ('1598393234727', '1598392453723', '1597958624903', '‰Ω†Â•Ω', '1597958624903', '‰Ω†Â•Ω', '222');
INSERT INTO `son_comment` VALUES ('1598393331557', '1', '1597958624903', '‰Ω†Â•Ω', '123456', '2Âè∑', 'jkjlsdf');
INSERT INTO `son_comment` VALUES ('1598393377783', '1', '1597958624903', '‰Ω†Â•Ω', '1597958624903', '‰Ω†Â•Ω', 'jlsfd');
INSERT INTO `son_comment` VALUES ('1598393395412', '1', '1597958624903', '‰Ω†Â•Ω', '1597958624903', '‰Ω†Â•Ω', 'kljflsjdjowiueio');
INSERT INTO `son_comment` VALUES ('1598393605650', '2', '1597958624903', '‰Ω†Â•Ω', '123456', '2Âè∑', 'kljsfd');
INSERT INTO `son_comment` VALUES ('1598461901345', '1598461887524', '1598460348720', 'ÁôæÂøß', '1598460348720', 'ÁôæÂøß', 'ÊàëÂæàÂ•Ω');
INSERT INTO `son_comment` VALUES ('1598461910728', '1598461887524', '1598460348720', 'ÁôæÂøß', '1598460348720', 'ÁôæÂøß', '‰Ω†Âë¢');
INSERT INTO `son_comment` VALUES ('1598462472129', '1598393684598', '1598460348720', 'ÁôæÂøß', '1597958624903', '‰Ω†Â•Ω', 'jlksjklf');
INSERT INTO `son_comment` VALUES ('1598462843993', '1', '1598460348720', 'ÁôæÂøß', '1597958624903', '‰Ω†Â•Ω', '‰Ω†Â•Ω');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `uid` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `uname` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `email` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '123456',
  `sex` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `role` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `head_image` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_introduce` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `salt` varchar(4) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`uid`, `email`) USING BTREE,
  UNIQUE INDEX `unique_email`(`email`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('123456', '2Âè∑', '222', '0b6dec5f6af9b9ecb4f5bffad49f7316', 'boy', 'normal', 'http://localhost:8080/blogdata/head_image/111.png', '‰∏Ä‰∏™‰ºòÁßÄÁöÑÂ§ßÂ≠¶Áîü', '1wxA');
INSERT INTO `user` VALUES ('1597958624903', '‰Ω†Â•Ω', '111', '0b6dec5f6af9b9ecb4f5bffad49f7316', 'boy', 'normal', 'http://localhost:8080/blogdata/head_image/111.png', '‰∏Ä‰∏™‰ºòÁßÄÁöÑÂ§ßÂ≠¶Áîü', '1wxA');
INSERT INTO `user` VALUES ('1598460348720', 'ÁôæÂøß', '2889680858@qq.com', '1d1e20e4b92d691c46b1ac85c38d0775', 'boy', 'normal', 'http://localhost:8080/blogdata/head_image/2889680858@qq.com.png', '‰∏Ä‰∏™‰ºòÁßÄÁöÑÂ§ßÂ≠¶Áîü', 'A58m');

SET FOREIGN_KEY_CHECKS = 1;
